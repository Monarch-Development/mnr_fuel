--- [BETA]

-- local function createTargetData(cat)
--     local icon = cat == 'ev' and 'fas fa-bolt' or 'fas fa-gas-pump'
-- 
--     local options = {
--         [1] = {
--         	label = locale(('target.take_%s'):format(cat)),
--         	name = ('%s:option_1'):format(cat),
--         	icon = icon,
--         	distance = 3.0,
--         	canInteract = function()
--         	    return not refueling and not holdingItem('nozzle')
--         	end,
--         	onSelect = function(data)
--         	    takeNozzle(data, cat)
--         	end,
--         },
--         {
--         	label = locale(('target.return_%s'):format(cat)),
--         	name = ('%s:option_2'):format(cat),
--         	icon = icon,
--         	distance = 3.0,
--         	canInteract = function(entity)
--         	    return not refueling and usedPump == entity and holdingItem('nozzle')
--         	end,
--         	onSelect = function(data)
--         	    returnNozzle(data, cat)
--         	end,
--         },
--     }
-- 
--     if cat == 'fv' then
--         options[3] = {
--             label = locale('target.buy_jerrycan'),
--             name = 'fv:option_3',
--             icon = 'fas fa-fire-flame-simple',
--             distance = 3.0,
--             canInteract = function()
--                 return not refueling and not holdingItem('nozzle')
--             end,
--             onSelect = buyJerrycan,
--         }
--     end
-- 
-- 	return options
-- end
-- 
-- for model, data in pairs(pumps) do
-- 	local targetData = createTargetData(data.cat)
-- 	exports.ox_target:addModel(model, targetData)
-- end
-- 
-- exports.ox_target:addGlobalVehicle({
--     {
--         label = locale('target.refuel'),
--         name = 'mnr_fuel:vehicle:refuel',
--         icon = 'fas fa-gas-pump',
--         distance = 1.5,
--         canInteract = function()
--             return not refueling and holding ~= nil
--         end,
-- 		onSelect = refuelVehicle,
--     },
-- })